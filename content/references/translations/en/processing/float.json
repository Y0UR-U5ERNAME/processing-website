{
  "name": "float",
  "brief": "Data type for floating-point numbers, e.g. numbers that have a decimal point",
  "description": "Data type for floating-point numbers, e.g. numbers that have a decimal point.<br />\n<br />\nFloats are not precise, so adding small values (such as 0.0001) may not always increment precisely due to rounding errors. If you want to increment a value in small intervals, use an <b>int</b>, and divide by a <b>float</b> value before using it. (See the second example above.)<br />\n<br />\nFloating-point numbers can be as large as 3.40282347E+38 and as low as -3.40282347E+38. They are stored as 32 bits (4 bytes) of information. The <b>float</b> data type is inherited from Java; you can read more about the technical details <a href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\">here</a> and <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.3\">here</a>.<br />\n<br />\nProcessing supports the <b>double</b> datatype from Java as well. However, none of the Processing functions use <b>double</b> values, which use more memory and are typically overkill for most work created in Processing. We do not plan to add support for <b>double</b> values, as doing so would require increasing the number of API functions significantly.\n",
  "related": ["int", "double"],
  "syntax": ["float var", "float var = value"],
  "returns": "",
  "type": "function",
  "category": "Data",
  "subcategory": "Primitive",
  "parameters": [
    {
      "name": "var",
      "description": "variable name referencing the float",
      "type": []
    },
    { "name": "value", "description": "any floating-point value", "type": [] }
  ]
}
